{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Standard\\\\NewtonRaphson.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { compile, derivative } from 'mathjs';\nimport { Collapse } from \"react-bootstrap\";\nvar labelBic = [];\n\nclass NewtonRaphson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SumX: \"\",\n      errorX: \"\",\n      X: \"\",\n      talang: false\n    };\n    this.setSumX = this.setSumX.bind(this);\n    this.setX = this.setX.bind(this);\n  }\n\n  setSumX(event) {\n    this.setState({\n      SumX: event.target.value\n    });\n  }\n\n  setX(event) {\n    this.setState({\n      X: event.target.value\n    });\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      labelBic.length = 0;\n      this.fun();\n    }\n  }\n\n  showfun() {\n    return labelBic;\n  }\n\n  fun() {\n    var x = this.state.X,\n        sum = this.state.SumX,\n        fun = \"\",\n        diff = \"\",\n        dif = \"\",\n        xold = parseFloat(x),\n        scope = \"\",\n        ffun = \"\",\n        fdif = \"\",\n        xnew = \"\",\n        error = \"\",\n        i = 0;\n\n    while (true) {\n      fun = compile(sum);\n      diff = derivative(sum, \"x\");\n      scope = {\n        x: parseFloat(xold)\n      };\n      ffun = fun.evaluate(scope);\n      fdif = diff.evaluate(scope);\n      xnew = xold - ffun / fdif;\n      error = (xnew - xold) / xnew * 100;\n      xold = xnew;\n      labelBic.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, i), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, xold), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, error)));\n      i++;\n\n      if (error < 1 || i > 100) {\n        break;\n      }\n    }\n  }\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    const styles2 = {\n      width: \"200px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"NewtonRaphson\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"f(x)\")), React.createElement(\"input\", {\n      type: \"text\",\n      style: styles,\n      value: this.state.SumX,\n      onChange: this.setSumX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.X,\n      onChange: this.setX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"sum\")), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"ERROR\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.showfun()))));\n  }\n\n}\n\nexport default NewtonRaphson;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Standard/NewtonRaphson.js"],"names":["React","Table","compile","derivative","Collapse","labelBic","NewtonRaphson","Component","constructor","props","state","SumX","errorX","X","talang","setSumX","bind","setX","event","setState","target","value","runfun","length","fun","showfun","x","sum","diff","dif","xold","parseFloat","scope","ffun","fdif","xnew","error","i","evaluate","push","render","styles","width","styles2"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {compile,derivative} from 'mathjs'\r\nimport { Collapse } from \"react-bootstrap\"\r\nvar labelBic=[]\r\n\r\nclass NewtonRaphson extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          SumX:\"\",\r\n          errorX:\"\",\r\n          X:\"\",\r\n          talang:false\r\n        }\r\n        this.setSumX=this.setSumX.bind(this);\r\n        this.setX=this.setX.bind(this);\r\n    }\r\n    setSumX(event){\r\n        this.setState({SumX:event.target.value})\r\n    }\r\n    setX(event){\r\n        this.setState({X:event.target.value})\r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            labelBic.length=0\r\n           this.fun()\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return labelBic\r\n    }\r\n    fun(){\r\n        var x=this.state.X,sum=this.state.SumX,fun=\"\",diff=\"\",dif=\"\",xold=parseFloat(x),scope=\"\",ffun=\"\",fdif=\"\",xnew=\"\",error=\"\",i=0\r\n        while(true){   \r\n            fun=compile(sum)\r\n            diff=derivative(sum,\"x\")\r\n            scope={x:parseFloat(xold)}\r\n            ffun=fun.evaluate(scope)\r\n            fdif=diff.evaluate(scope)\r\n            xnew=xold-(ffun/fdif)\r\n            error=((xnew-xold)/xnew)*100\r\n            xold=xnew\r\n            labelBic.push(<tr>\r\n                <td>{i}</td>\r\n                <td>{xold}</td>\r\n                <td>{error}</td>\r\n            </tr>)\r\n            i++\r\n            if(error<1||i>100){\r\n                break\r\n            }\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        const styles2={\r\n                width: \"200px\"\r\n        }\r\n        return(\r\n            <div>\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">NewtonRaphson</div>\r\n                    <br/>\r\n                    <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">f(x)</span></div>\r\n                            <input type=\"text\" style={styles} value={this.state.SumX} onChange={this.setSumX}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">X</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.X} onChange={this.setX}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                </label>\r\n                <Collapse in={this.state.talang}><Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Iteration</th>\r\n                        <th>X</th>\r\n                        <th>ERROR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.showfun()}\r\n                    </tbody>\r\n                </Table></Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NewtonRaphson;"]},"metadata":{},"sourceType":"module"}