{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Standard\\\\Secant.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { Collapse } from \"react-bootstrap\";\nvar labelBic = [];\n\nclass Secant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SumX: \"\",\n      errorX: \"\",\n      Xl: \"\",\n      Xr: \"\",\n      Xm: \"\",\n      Iteration: \"\",\n      talang: false\n    };\n    this.setSumX = this.setSumX.bind(this);\n    this.setXl = this.setXl.bind(this);\n    this.setXr = this.setXr.bind(this);\n    this.setIteration = this.setIteration.bind(this);\n  }\n\n  setSumX(event) {\n    this.setState({\n      SumX: event.target.value\n    });\n  }\n\n  setXl(event) {\n    this.setState({\n      Xl: event.target.value\n    });\n  }\n\n  setXr(event) {\n    this.setState({\n      Xr: event.target.value\n    });\n  }\n\n  setIteration(event) {\n    this.setState({\n      Iteration: event.target.value\n    });\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      labelBic.length = 0;\n      this.fun();\n    }\n  }\n\n  showfun() {\n    return labelBic;\n  }\n\n  fun() {}\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Secant\"), React.createElement(\"div\", {\n      className: \"Contentnumer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" The bisection method in mathematics is a root-finding method that repeatedly bisects an interval and then selects a sub-interval in which a root must lie for further processing. It is a very simple and robust method, but it is also relatively slow. Because of this, it is often used to obtain a rough approximation to a solution which is then used as a starting point for more rapidly converging methods. This method is also called the Interval Halving Method, the Binary Search Method, the Dichotomy Method, Robust Root Finding Method and Bolzano\\u2019s Method. It\\u2019s strategy is to begin with two values of x, say xL and xU, that brackets a root of       f(x) = 0. It determines that the initial values x = xL and x = xU. The method treats the interval distance between the initial values as line segment then successively divides the interval in half and replaces one endpoint with the midpoint so that again the root is bracketed. Note : xL for lower limit xU for upper limit xR for average of upper and lower limit () At each step, the method divides the interval in two by computing the midpoint xR = (xL + xU) / 2 of the interval and the value of the function f(xR) at that point. Unless xR is itself a root (which is very unlikely, but possible) there are now two possibilities: either f(xL) and f(xR) have opposite signs and bracket a root, or f(xR) and f(xU) have opposite signs and bracket a root. The method selects the subinterval that is a bracket as a new interval to be used in the next step. In this way the interval that contains a zero of f is reduced in width by 50% at each step. The process is continued until the interval is sufficiently small. Explicitly, if f(xL) and f(xR) are opposite signs, then the method sets xR as the new value for xU, and if f(xL) and f(xR) are same signs then the method sets xR as the new xL. (If f(xR)=0 then xR may be taken as the solution and the process stops.)In both cases, the new f(xL) and f(xU) have opposite signs, so the method is applicable to this smaller interval.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"f(x)\")), React.createElement(\"input\", {\n      type: \"text\",\n      style: styles,\n      value: this.state.SumX,\n      onChange: this.setSumX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"X0\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.Xl,\n      onChange: this.setXl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"X1\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.Xr,\n      onChange: this.setXr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"sum\")), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"XL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"XR\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"XM\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"ERROR\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.showfun()))));\n  }\n\n}\n\nexport default Secant;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Standard/Secant.js"],"names":["React","Table","Collapse","labelBic","Secant","Component","constructor","props","state","SumX","errorX","Xl","Xr","Xm","Iteration","talang","setSumX","bind","setXl","setXr","setIteration","event","setState","target","value","runfun","length","fun","showfun","render","styles","width"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Collapse } from \"react-bootstrap\"\r\nvar labelBic=[]\r\n\r\nclass Secant extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          SumX:\"\",\r\n          errorX:\"\",\r\n          Xl:\"\",\r\n          Xr:\"\",\r\n          Xm:\"\",\r\n          Iteration:\"\",\r\n          talang:false\r\n        }\r\n        this.setSumX=this.setSumX.bind(this);\r\n        this.setXl=this.setXl.bind(this);\r\n        this.setXr=this.setXr.bind(this);\r\n        this.setIteration=this.setIteration.bind(this);\r\n    }\r\n    setSumX(event){\r\n        this.setState({SumX:event.target.value})\r\n    }\r\n    setXl(event){\r\n        this.setState({Xl:event.target.value})\r\n    }\r\n    setXr(event){\r\n        this.setState({Xr:event.target.value})\r\n    }\r\n    setIteration(event){\r\n        this.setState({Iteration:event.target.value})\r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            labelBic.length=0\r\n           this.fun()\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return labelBic\r\n    }\r\n    fun(){\r\n\r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        return(\r\n            <div className=\"card\">\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">Secant</div>\r\n                    <div className=\"Contentnumer\"> The bisection method in mathematics is a root-finding method that repeatedly bisects an interval and then selects a sub-interval in which a root must lie for further processing. It is a very simple and robust method, but it is also relatively slow. Because of this, it is often used to obtain a rough approximation to a solution which is then used as a starting point for more rapidly converging methods.\r\n                                                                    This method is also called the Interval Halving Method, the Binary Search Method, the Dichotomy Method, Robust Root Finding Method and Bolzano’s Method. It’s strategy is to begin with two values of x, say xL and xU, that brackets a root of       f(x) = 0. It determines that the initial values x = xL and x = xU. The method treats the interval distance between the initial values as line segment then successively divides the interval in half and replaces one endpoint with the midpoint so that again the root is bracketed.\r\n                                                                    Note : xL for lower limit\r\n                                                                    xU for upper limit\r\n                                                                    xR for average of upper and lower limit ()\r\n                                                                    At each step, the method divides the interval in two by computing the midpoint xR = (xL + xU) / 2 of the interval and the value of the function f(xR) at that point. Unless xR is itself a root (which is very unlikely, but possible) there are now two possibilities: either f(xL) and f(xR) have opposite signs and bracket a root, or f(xR) and f(xU) have opposite signs and bracket a root. The method selects the subinterval that is a bracket as a new interval to be used in the next step. In this way the interval that contains a zero of f is reduced in width by 50% at each step. The process is continued until the interval is sufficiently small.\r\n                                                                    Explicitly, if f(xL) and f(xR) are opposite signs, then the method sets xR as the new value for xU, and if f(xL) and f(xR) are same signs then the method sets xR as the new xL. (If f(xR)=0 then xR may be taken as the solution and the process stops.)In both cases, the new f(xL) and f(xU) have opposite signs, so the method is applicable to this smaller interval.</div>\r\n                    <br/>\r\n                    <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">f(x)</span></div>\r\n                            <input type=\"text\" style={styles} value={this.state.SumX} onChange={this.setSumX}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">X0</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.Xl} onChange={this.setXl}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">X1</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.Xr} onChange={this.setXr}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                </label>\r\n                <Collapse in={this.state.talang}><Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Iteration</th>\r\n                        <th>XL</th>\r\n                        <th>XR</th>\r\n                        <th>XM</th>\r\n                        <th>ERROR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.showfun()}\r\n                    </tbody>\r\n                </Table></Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Secant;"]},"metadata":{},"sourceType":"module"}