{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Direct\\\\LU.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import Table from 'react-bootstrap/Table'\n\nimport { Collapse } from \"react-bootstrap\";\nimport { create, all } from 'mathjs';\nvar A = [],\n    B = [],\n    answer = [],\n    answerlu,\n    matrixA = [],\n    matrixB = [];\nconst math = create(all);\n\nclass LU extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      row: parseInt(0),\n      col: parseInt(0),\n      talang: false,\n      talang2: false\n    };\n    this.setrow = this.setrow.bind(this);\n    this.setcol = this.setcol.bind(this);\n  }\n\n  setrow(event) {\n    this.setState({\n      row: event.target.value\n    });\n  }\n\n  setcol(event) {\n    this.setState({\n      col: event.target.value\n    });\n  }\n\n  fun() {\n    this.sumMatrix();\n    answerlu = math.lusolve(A, B);\n\n    for (var i = 0; i < answerlu.length; i++) {\n      answer.push(React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, i + 1), \"=\", Math.round(answerlu[i])));\n      answer.push(React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"56565\"));\n      answer.push(React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push(React.createElement(\"input\", {\n          id: \"a\" + i + \"\" + j,\n          key: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n\n      matrixA.push(React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n      matrixB.push(React.createElement(\"input\", {\n        id: \"b\" + i,\n        key: \"b\" + i,\n        placeholder: \"b\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }\n\n  sumMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.col; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  runfun2(event) {\n    this.setState({\n      talang2: event\n    });\n    this.setState({\n      talang: false\n    });\n\n    if (event) {\n      answer = [];\n      this.fun();\n    }\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      matrixA = [];\n      matrixB = [];\n      this.createMatrix(this.state.row, this.state.col);\n    }\n  }\n\n  showfun() {\n    return answer;\n  }\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"CramersRule\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"In linear algebra, Cramer's rule is an explicit formula for the solution of a system of linear equations with as many equations as unknowns, valid whenever the system has a unique solution. It expresses the solution in terms of the determinants of the (square) coefficient matrix and of matrices obtained from it by replacing one column by the column vector of right-hand-sides of the equations. It is named after Gabriel Cramer (1704\\u20131752), who published the rule for an arbitrary number of unknowns in 1750,[1][2] although Colin Maclaurin also published special cases of the rule in 1748[3] (and possibly knew of it as early as 1729)\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"ROW\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.row,\n      onChange: this.setrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"COLUMN\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.col,\n      onChange: this.setcol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"sum\")), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Matrix [A]\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), matrixA, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Vector [B]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), matrixB), React.createElement(\"button\", {\n      onClick: () => this.runfun2(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"sum\"))), React.createElement(Collapse, {\n      in: this.state.talang2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.showfun())));\n  }\n\n}\n\nexport default LU;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Direct/LU.js"],"names":["React","Collapse","create","all","A","B","answer","answerlu","matrixA","matrixB","math","LU","Component","constructor","props","state","row","parseInt","col","talang","talang2","setrow","bind","setcol","event","setState","target","value","fun","sumMatrix","lusolve","i","length","push","Math","round","createMatrix","column","j","parseFloat","document","getElementById","runfun2","runfun","showfun","render","styles","width"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n//import Table from 'react-bootstrap/Table'\r\nimport { Collapse } from \"react-bootstrap\"\r\nimport {create,all} from'mathjs'\r\nvar A = [], B = [], answer = [],answerlu, matrixA = [], matrixB = []\r\nconst math = create(all)\r\n\r\nclass LU extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          row:parseInt(0),\r\n          col: parseInt(0),\r\n          talang:false,\r\n          talang2:false\r\n        }\r\n        this.setrow=this.setrow.bind(this)\r\n        this.setcol=this.setcol.bind(this)\r\n    }\r\n    setrow(event){\r\n        this.setState({row:event.target.value})\r\n    }\r\n    setcol(event){\r\n        this.setState({col:event.target.value})\r\n    }\r\n    fun() {\r\n        this.sumMatrix();\r\n        answerlu = math.lusolve(A, B)\r\n        for (var i = 0; i < answerlu.length; i++) {\r\n            answer.push(<h2>X<sub>{i+1}</sub>={Math.round(answerlu[i])}</h2>)\r\n            answer.push(<h2>56565</h2>)\r\n            answer.push(<br />)\r\n        }\r\n        \r\n        \r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<input id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<input id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n        }   \r\n\r\n    }\r\n    sumMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.col ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n    runfun2(event){\r\n        this.setState({talang2:event})\r\n        this.setState({talang:false})\r\n        if(event){\r\n            answer=[]\r\n           this.fun()\r\n        }\r\n        \r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            matrixA=[]\r\n            matrixB=[]\r\n           this.createMatrix(this.state.row,this.state.col)\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return answer\r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        return(\r\n            <div>\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">CramersRule</div>\r\n                        <div>In linear algebra, Cramer's rule is an explicit formula for the solution of a system of linear equations with as many equations as unknowns, valid whenever the system has a unique solution. It expresses the solution in terms of the determinants of the (square) coefficient matrix and of matrices obtained from it by replacing one column by the column vector of right-hand-sides of the equations. It is named after Gabriel Cramer (1704–1752), who published the rule for an arbitrary number of unknowns in 1750,[1][2] although Colin Maclaurin also published special cases of the rule in 1748[3] (and possibly knew of it as early as 1729)</div>\r\n                        <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">ROW</span></div>\r\n                            <input type=\"number\" style={styles} value={this.state.row} onChange={this.setrow}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">COLUMN</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.col} onChange={this.setcol}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                    \r\n                </label>\r\n                <Collapse in={this.state.talang}>\r\n                    <div>\r\n                    <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}</div>\r\n                    <button onClick={()=>this.runfun2(true)} className=\"btn btn-danger\">sum</ button>\r\n                    </div>\r\n                </Collapse>\r\n                <Collapse in={this.state.talang2}>\r\n                    <div>\r\n                        {this.showfun()}\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LU;"]},"metadata":{},"sourceType":"module"}