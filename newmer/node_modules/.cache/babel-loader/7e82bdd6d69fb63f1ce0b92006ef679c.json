{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Standard\\\\Secant.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { compile } from 'mathjs';\nimport { Collapse } from \"react-bootstrap\";\nvar labelSec = [];\n\nclass Secant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SumX: \"\",\n      errorX: \"\",\n      X0: \"\",\n      X1: \"\",\n      Xm: \"\",\n      Iteration: \"\",\n      talang: false\n    };\n    this.setSumX = this.setSumX.bind(this);\n    this.setX0 = this.setX0.bind(this);\n    this.setX1 = this.setX1.bind(this);\n    this.setIteration = this.setIteration.bind(this);\n  }\n\n  setSumX(event) {\n    this.setState({\n      SumX: event.target.value\n    });\n  }\n\n  setX0(event) {\n    this.setState({\n      X0: event.target.value\n    });\n  }\n\n  setX1(event) {\n    this.setState({\n      X1: event.target.value\n    });\n  }\n\n  setIteration(event) {\n    this.setState({\n      Iteration: event.target.value\n    });\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      labelSec.length = 0;\n      this.fun();\n    }\n  }\n\n  showfun() {\n    return labelSec;\n  }\n\n  fun() {\n    var j = 1;\n    var Errornew = 0;\n    var Errorx = -1;\n    const Fx1 = compile(this.state.SumX);\n    var x = [];\n    x[0] = parseFloat(this.state.X0);\n    x[1] = parseFloat(this.state.X1);\n    let X = {\n      x: x[j]\n    };\n    let Y = {\n      x: x[j - 1]\n    };\n    x[j + 1] = x[j] - Fx1.evaluate(X) * (x[j] - x[j - 1]) / (Fx1.evaluate(X) - Fx1.evaluate(Y));\n    Errornew = Math.abs((x[j + 1] - x[j]) / x[j + 1]);\n    labelSec.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, x[j - 1]), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"NULL\")));\n    labelSec.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, x[j]), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"NULL\")));\n    labelSec.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, x[j + 1]), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, Errornew.toFixed(6))));\n\n    while (Errornew > 0 && Errorx !== Errornew) {\n      j++;\n      Errorx = Errornew;\n      let X = {\n        x: x[j]\n      };\n      let Y = {\n        x: x[j - 1]\n      };\n      x[j + 1] = x[j] - Fx1.evaluate(X) * (x[j] - x[j - 1]) / (Fx1.evaluate(X) - Fx1.evaluate(Y));\n      Errornew = Math.abs((x[j + 1] - x[j]) / x[j + 1]);\n      labelSec.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, j + 1), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, x[j + 1]), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, Errornew.toFixed(6))));\n    }\n  }\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Secant\"), React.createElement(\"div\", {\n      className: \"Contentnumer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Given a curve, a secant line (or just secant) is a line which passes through two points of that curve. To understand why the secant function is so named, see trigonometric functions. The secant method is a technique for finding the root of a scalar-valued function f(x) of a single variable x when no information about the derivative exists. It is similar in many ways to the false-position method, but trades the possibility of non-convergence for faster convergence.\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"f(x)\")), React.createElement(\"input\", {\n      type: \"text\",\n      style: styles,\n      value: this.state.SumX,\n      onChange: this.setSumX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"X0\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.X0,\n      onChange: this.setX0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"X1\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.X1,\n      onChange: this.setX1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"sum\")), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Iteration\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"ERROR\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.showfun()))));\n  }\n\n}\n\nexport default Secant;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Standard/Secant.js"],"names":["React","Table","compile","Collapse","labelSec","Secant","Component","constructor","props","state","SumX","errorX","X0","X1","Xm","Iteration","talang","setSumX","bind","setX0","setX1","setIteration","event","setState","target","value","runfun","length","fun","showfun","j","Errornew","Errorx","Fx1","x","parseFloat","X","Y","evaluate","Math","abs","push","toFixed","render","styles","width"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {compile} from 'mathjs'\r\nimport { Collapse } from \"react-bootstrap\"\r\nvar labelSec=[]\r\n\r\nclass Secant extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          SumX:\"\",\r\n          errorX:\"\",\r\n          X0:\"\",\r\n          X1:\"\",\r\n          Xm:\"\",\r\n          Iteration:\"\",\r\n          talang:false\r\n        }\r\n        this.setSumX=this.setSumX.bind(this);\r\n        this.setX0=this.setX0.bind(this);\r\n        this.setX1=this.setX1.bind(this);\r\n        this.setIteration=this.setIteration.bind(this);\r\n    }\r\n    setSumX(event){\r\n        this.setState({SumX:event.target.value})\r\n    }\r\n    setX0(event){\r\n        this.setState({X0:event.target.value})\r\n    }\r\n    setX1(event){\r\n        this.setState({X1:event.target.value})\r\n    }\r\n    setIteration(event){\r\n        this.setState({Iteration:event.target.value})\r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            labelSec.length=0\r\n           this.fun()\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return labelSec\r\n    }\r\n    fun(){\r\n        var j=1\r\n        var Errornew=0\r\n        var Errorx=-1\r\n        const Fx1 = compile(this.state.SumX)\r\n        var x=[]\r\n        x[0]= parseFloat(this.state.X0)\r\n        x[1]= parseFloat(this.state.X1)\r\n            let X = {\r\n                x: x[j]\r\n            }\r\n            let Y = {\r\n                x: x[j-1]\r\n            }\r\n            x[j+1] = x[j]-(Fx1.evaluate(X)*(x[j]-x[j-1]))/(Fx1.evaluate(X)-Fx1.evaluate(Y))\r\n            Errornew=Math.abs((x[j+1]-x[j])/x[j+1])\r\n            labelSec.push(\r\n            <tr>\r\n                <th>0</th>\r\n                <th>{x[j-1]}</th>\r\n                <th>NULL</th>\r\n            </tr>\r\n            )\r\n            labelSec.push(\r\n            <tr>\r\n                <th>1</th>\r\n                <th>{x[j]}</th>\r\n                <th>NULL</th>\r\n            </tr>\r\n            )\r\n            labelSec.push(\r\n            <tr>\r\n                <th>2</th>\r\n                <th>{x[j+1]}</th>\r\n                <th>{Errornew.toFixed(6)}</th>\r\n            </tr>\r\n            )\r\n        while(Errornew>0 && Errorx!==Errornew){\r\n            j++\r\n            Errorx=Errornew\r\n            let X = {\r\n                x: x[j]\r\n            }\r\n            let Y = {\r\n                x: x[j-1]\r\n            }\r\n            x[j+1] = x[j]-(Fx1.evaluate(X)*(x[j]-x[j-1]))/(Fx1.evaluate(X)-Fx1.evaluate(Y))\r\n            Errornew=Math.abs((x[j+1]-x[j])/x[j+1])\r\n            labelSec.push(\r\n            <tr>\r\n                <th>{j+1}</th>\r\n                <th>{x[j+1]}</th>\r\n                <th>{Errornew.toFixed(6)}</th>\r\n            </tr>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        return(\r\n            <div className=\"card\">\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">Secant</div>\r\n                    <div className=\"Contentnumer\"> Given a curve, a secant line (or just secant) is a line which passes through two points of that curve. To understand why the secant function is so named, see trigonometric functions.\r\n                                                    The secant method is a technique for finding the root of a scalar-valued function f(x) of a single variable x when no information about the derivative exists. It is similar in many ways to the false-position method, but trades the possibility of non-convergence for faster convergence.</div>\r\n                    <br/>\r\n                    <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">f(x)</span></div>\r\n                            <input type=\"text\" style={styles} value={this.state.SumX} onChange={this.setSumX}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">X0</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.X0} onChange={this.setX0}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">X1</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.X1} onChange={this.setX1}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                </label>\r\n                <Collapse in={this.state.talang}><Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Iteration</th>\r\n                        <th>X</th>\r\n                        <th>ERROR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.showfun()}\r\n                    </tbody>\r\n                </Table></Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Secant;"]},"metadata":{},"sourceType":"module"}