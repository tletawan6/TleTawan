{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Direct\\\\CramersRule.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { Collapse } from \"react-bootstrap\";\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [];\n\nclass CramersRule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      row: parseInt(0),\n      col: parseInt(0),\n      talang: false,\n      talang2: false\n    };\n    this.setrow = this.setrow.bind(this);\n    this.setcol = this.setcol.bind(this);\n  }\n\n  setrow(event) {\n    this.setState({\n      row: event.target.value\n    });\n  }\n\n  setcol(event) {\n    this.setState({\n      col: event.target.value\n    });\n  }\n\n  cramer() {\n    this.initMatrix();\n    var counter = 0;\n\n    while (counter !== this.state.row) {\n      var transformMatrix = JSON.parse(JSON.stringify(A));\n\n      for (var i = 0; i < this.state.row; i++) {\n        for (var j = 0; j < this.state.col; j++) {\n          if (j === counter) {\n            transformMatrix[i][j] = B[i];\n            break;\n          }\n        }\n      }\n\n      counter++;\n      answer.push(React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"X\", React.createElement(\"sub\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, counter), \"=\\xA0\\xA0\", Math.round(Math.det(transformMatrix)) / Math.round(Math.det(A))));\n      answer.push(React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }\n\n  createMatrix(row, column) {\n    for (var i = 1; i <= row; i++) {\n      for (var j = 1; j <= column; j++) {\n        matrixA.push(React.createElement(\"input\", {\n          id: \"a\" + i + \"\" + j,\n          key: \"a\" + i + \"\" + j,\n          placeholder: \"a\" + i + \"\" + j,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n\n      matrixA.push(React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n      matrixB.push(React.createElement(\"input\", {\n        id: \"b\" + i,\n        key: \"b\" + i,\n        placeholder: \"b\" + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }\n\n  initMatrix() {\n    for (var i = 0; i < this.state.row; i++) {\n      A[i] = [];\n\n      for (var j = 0; j < this.state.col; j++) {\n        A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n      }\n\n      B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n    }\n  }\n\n  runfun2(event) {\n    this.setState({\n      talang2: event\n    });\n    this.setState({\n      talang: false\n    });\n\n    if (event) {\n      answer = [];\n      this.cramer();\n    }\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      matrixA = [];\n      matrixB = [];\n      this.createMatrix(this.state.row, this.state.col);\n    }\n  }\n\n  showfun() {\n    return answer;\n  }\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"CramersRule\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"ROW\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.row,\n      onChange: this.setrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"COLUMN\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.col,\n      onChange: this.setcol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"sum\")), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.talang && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Matrix [A]\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), matrixA, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Vector [B]\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), matrixB), React.createElement(\"button\", {\n      onClick: () => this.runfun2(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"sum\"))));\n  }\n\n}\n\nexport default CramersRule;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Direct/CramersRule.js"],"names":["React","Table","Collapse","A","B","answer","matrixA","matrixB","CramersRule","Component","constructor","props","state","row","parseInt","col","talang","talang2","setrow","bind","setcol","event","setState","target","value","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","i","j","push","Math","round","det","createMatrix","column","parseFloat","document","getElementById","runfun2","runfun","showfun","render","styles","width"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Collapse } from \"react-bootstrap\"\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\n\r\nclass CramersRule extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          row:parseInt(0),\r\n          col: parseInt(0),\r\n          talang:false,\r\n          talang2:false\r\n        }\r\n        this.setrow=this.setrow.bind(this)\r\n        this.setcol=this.setcol.bind(this)\r\n    }\r\n    setrow(event){\r\n        this.setState({row:event.target.value})\r\n    }\r\n    setcol(event){\r\n        this.setState({col:event.target.value})\r\n    }\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter=0; \r\n        while (counter !== this.state.row) { \r\n            var transformMatrix = JSON.parse(JSON.stringify(A));\r\n            for (var i=0 ; i<this.state.row ; i++) {\r\n                for (var j=0 ; j<this.state.col ; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n                }\r\n            } \r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(Math.det(transformMatrix))/Math.round(Math.det(A))}</h2>)\r\n            answer.push(<br/>) \r\n        }\r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<input id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<input id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n        }   \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.col ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n    runfun2(event){\r\n        this.setState({talang2:event})\r\n        this.setState({talang:false})\r\n        if(event){\r\n            answer=[]\r\n           this.cramer()\r\n        }\r\n        \r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            matrixA=[]\r\n            matrixB=[]\r\n           this.createMatrix(this.state.row,this.state.col)\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return answer\r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        return(\r\n            <div>\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">CramersRule</div>\r\n                    <br/>\r\n                        <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">ROW</span></div>\r\n                            <input type=\"number\" style={styles} value={this.state.row} onChange={this.setrow}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">COLUMN</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.col} onChange={this.setcol}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                    \r\n                </label>\r\n                <Collapse in={this.state.talang}>\r\n                    <div>\r\n                    {this.state.talang && <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}</div>}\r\n                    <button onClick={()=>this.runfun2(true)} className=\"btn btn-danger\">sum</ button>\r\n                    </div>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CramersRule;"]},"metadata":{},"sourceType":"module"}