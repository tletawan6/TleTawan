{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\wed\\\\newmer\\\\src\\\\Standard\\\\Bisection.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table';\nimport { compile } from 'mathjs';\nimport { Collapse } from \"react-bootstrap\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nvar labelBic = [];\nconst dataBic = [];\n\nclass Standard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SumX: \"\",\n      errorX: \"\",\n      Xl: \"\",\n      Xr: \"\",\n      Xm: \"\",\n      Interation: \"\",\n      talang: false\n    };\n    this.setSumX = this.setSumX.bind(this);\n    this.setXl = this.setXl.bind(this);\n    this.setXr = this.setXr.bind(this);\n    this.setInteration = this.setInteration.bind(this);\n  }\n\n  setSumX(event) {\n    this.setState({\n      SumX: event.target.value\n    });\n  }\n\n  setXl(event) {\n    this.setState({\n      Xl: event.target.value\n    });\n  }\n\n  setXr(event) {\n    this.setState({\n      Xr: event.target.value\n    });\n  }\n\n  setInteration(event) {\n    this.setState({\n      Interation: event.target.value\n    });\n  }\n\n  runfun(event) {\n    this.setState({\n      talang: event\n    });\n\n    if (event) {\n      labelBic.length = 0;\n      this.fun(this.state.Interation);\n    }\n  }\n\n  showfun() {\n    return labelBic;\n  }\n\n  fun(event) {\n    var one = compile(this.state.SumX);\n    let xl = parseFloat(this.state.Xl);\n    let xr = parseFloat(this.state.Xr);\n    let interation = event;\n    let xmold = (xl + xr) / 2;\n    let xmnew = \"\";\n    let errorxm = \"\";\n    var scopeXr = {\n      x: parseFloat(this.state.Xr)\n    };\n    var scopeXm = {\n      x: parseFloat(xmold)\n    };\n    var sumxr = one.evaluate(scopeXr);\n    var sumxm = one.evaluate(scopeXm);\n    var sumvalue = parseFloat(sumxm) * parseFloat(sumxr);\n\n    if (sumvalue < 0) {\n      xl = xmold;\n    } else {\n      xr = xmold;\n    }\n\n    labelBic.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, xl), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, xr), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, xmold), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"null\")));\n    dataBic.push({\n      Interation: 0,\n      xm: xmold\n    });\n\n    for (var i = 1; i - 1 < interation; i++) {\n      xmnew = (xl + xr) / 2;\n      scopeXm = {\n        x: parseFloat(xmnew)\n      };\n      sumxr = one.evaluate(scopeXr);\n      sumxm = one.evaluate(scopeXm);\n      sumvalue = parseFloat(sumxm) * parseFloat(sumxr);\n\n      if (sumvalue < 0) {\n        xl = xmnew;\n      } else {\n        xr = xmnew;\n      }\n\n      errorxm = (xmnew - xmold) / xmnew;\n      labelBic.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, i), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, xl), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, xr), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, xmnew), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, errorxm)));\n      dataBic.push({\n        Interation: {\n          i\n        },\n        xm: xmnew\n      });\n      xmold = xmnew;\n    }\n  }\n\n  render() {\n    const styles = {\n      width: \"250px\"\n    };\n    const styles2 = {\n      width: \"200px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Bisection\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"f(x)\")), React.createElement(\"input\", {\n      type: \"text\",\n      style: styles,\n      value: this.state.SumX,\n      onChange: this.setSumX,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"XL\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.Xl,\n      onChange: this.setXl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"XR\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles,\n      value: this.state.Xr,\n      onChange: this.setXr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Interation\")), React.createElement(\"input\", {\n      type: \"number\",\n      style: styles2,\n      value: this.state.Interation,\n      onChange: this.setInteration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.runfun(true),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"sum\")), React.createElement(LineChart, {\n      width: 600,\n      height: 300,\n      data: dataBic,\n      margin: {\n        top: 5,\n        right: 20,\n        bottom: 5,\n        left: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"xm\",\n      stroke: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      stroke: \"#ccc\",\n      strokeDasharray: \"5 5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"Interation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(Collapse, {\n      in: this.state.talang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Interation\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"XL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"XR\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"XM\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"ERROR\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.showfun()))));\n  }\n\n}\n\nexport default Standard;","map":{"version":3,"sources":["C:/Users/HP/Desktop/wed/newmer/src/Standard/Bisection.js"],"names":["React","Table","compile","Collapse","LineChart","Line","CartesianGrid","XAxis","YAxis","labelBic","dataBic","Standard","Component","constructor","props","state","SumX","errorX","Xl","Xr","Xm","Interation","talang","setSumX","bind","setXl","setXr","setInteration","event","setState","target","value","runfun","length","fun","showfun","one","xl","parseFloat","xr","interation","xmold","xmnew","errorxm","scopeXr","x","scopeXm","sumxr","evaluate","sumxm","sumvalue","push","xm","i","render","styles","width","styles2","top","right","bottom","left"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Table from 'react-bootstrap/Table'\r\nimport {compile} from 'mathjs'\r\nimport { Collapse } from \"react-bootstrap\"\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts'\r\nvar labelBic=[]\r\nconst  dataBic=[]\r\n\r\nclass Standard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n          SumX:\"\",\r\n          errorX:\"\",\r\n          Xl:\"\",\r\n          Xr:\"\",\r\n          Xm:\"\",\r\n          Interation:\"\",\r\n          talang:false\r\n        }\r\n        this.setSumX=this.setSumX.bind(this);\r\n        this.setXl=this.setXl.bind(this);\r\n        this.setXr=this.setXr.bind(this);\r\n        this.setInteration=this.setInteration.bind(this);\r\n    }\r\n    setSumX(event){\r\n        this.setState({SumX:event.target.value})\r\n    }\r\n    setXl(event){\r\n        this.setState({Xl:event.target.value})\r\n    }\r\n    setXr(event){\r\n        this.setState({Xr:event.target.value})\r\n    }\r\n    setInteration(event){\r\n        this.setState({Interation:event.target.value})\r\n    }\r\n    runfun(event){\r\n        this.setState({talang:event})\r\n        if(event){\r\n            labelBic.length=0\r\n           this.fun(this.state.Interation)\r\n        }\r\n        \r\n    }\r\n    showfun(){\r\n        return labelBic\r\n    }\r\n    fun(event){\r\n        var one =compile(this.state.SumX)\r\n        let xl=parseFloat(this.state.Xl)\r\n        let xr=parseFloat(this.state.Xr)\r\n        let interation=event\r\n        let xmold=(xl+xr)/2\r\n        let xmnew=\"\"\r\n        let errorxm=\"\"\r\n        var scopeXr ={x:parseFloat(this.state.Xr)}\r\n        var scopeXm ={x:parseFloat(xmold)}\r\n        var sumxr =one.evaluate(scopeXr)\r\n        var sumxm =one.evaluate(scopeXm)\r\n        var sumvalue=parseFloat(sumxm)*parseFloat(sumxr)\r\n        if(sumvalue<0){\r\n          xl=xmold\r\n        }\r\n        else{\r\n          xr=xmold\r\n        }\r\n        labelBic.push(<tr>\r\n                        <td>0</td>\r\n                        <td>{xl}</td>\r\n                        <td>{xr}</td>\r\n                        <td>{xmold}</td>\r\n                        <td>null</td>\r\n                    </tr>)\r\n        dataBic.push({\r\n            Interation:0,\r\n            xm:xmold\r\n        })\r\n        for(var i=1;i-1<interation;i++){\r\n          xmnew=(xl+xr)/2\r\n          scopeXm ={x:parseFloat(xmnew)}\r\n          sumxr =one.evaluate(scopeXr)\r\n          sumxm =one.evaluate(scopeXm)\r\n          sumvalue=parseFloat(sumxm)*parseFloat(sumxr)\r\n          if(sumvalue<0){\r\n            xl=xmnew\r\n          }\r\n          else{\r\n            xr=xmnew\r\n          }\r\n          errorxm=(xmnew-xmold)/xmnew\r\n          labelBic.push(<tr>\r\n                <td>{i}</td>\r\n                <td>{xl}</td>\r\n                <td>{xr}</td>\r\n                <td>{xmnew}</td>\r\n                <td>{errorxm}</td>\r\n            </tr>)\r\n            dataBic.push({\r\n                Interation:{i},\r\n                xm:xmnew\r\n            })\r\n          xmold=xmnew\r\n        }\r\n    }\r\n    render(){\r\n        const styles={\r\n\t\t\twidth: \"250px\"\r\n        }\r\n        const styles2={\r\n                width: \"200px\"\r\n        }\r\n        return(\r\n            <div>\r\n                <label className=\"alert\">\r\n                    <br/><div className=\"alert alert-danger\">Bisection</div>\r\n                    <br/>\r\n                    <div className=\"input-group\" >\r\n                        <div className=\"input-group-prepend\"><span className=\"input-group-text\">f(x)</span></div>\r\n                            <input type=\"text\" style={styles} value={this.state.SumX} onChange={this.setSumX}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">XL</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.Xl} onChange={this.setXl}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">XR</span></div>\r\n                                <input type=\"number\" style={styles} value={this.state.Xr} onChange={this.setXr}/>\r\n                        </div><br/>\r\n                        <div className=\"input-group\" >\r\n                            <div className=\"input-group-prepend\"><span className=\"input-group-text\">Interation</span></div>\r\n                                <input type=\"number\" style={styles2} value={this.state.Interation} onChange={this.setInteration}/>\r\n                        </div><br/>\r\n                        <button onClick={()=>this.runfun(true)} className=\"btn btn-danger\">sum</ button>\r\n                </label>\r\n                <LineChart width={600} height={300} data={dataBic} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n                        <Line type=\"monotone\" dataKey=\"xm\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"Interation\" />\r\n                        <YAxis />\r\n                </LineChart>\r\n                <Collapse in={this.state.talang}><Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Interation</th>\r\n                        <th>XL</th>\r\n                        <th>XR</th>\r\n                        <th>XM</th>\r\n                        <th>ERROR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.showfun()}\r\n                    </tbody>\r\n                </Table></Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Standard;"]},"metadata":{},"sourceType":"module"}